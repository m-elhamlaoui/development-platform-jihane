pipeline {
  agent any

  environment {
    DOCKER_HUB_CREDENTIALS = credentials('dockerhub-creds')
    IMAGE_NAME = "charafedd20/backend-app"
  }

  stages {
    stage('Clone repository') {
      steps {
        git branch: 'main', credentialsId: 'github-creds', url: 'https://github.com/m-elhamlaoui/development-platform-jihane.git'
      }
    }

    stage('Build Backend') {
      steps {
        dir('backend') {
          sh './mvnw clean package -DskipTests'
        }
      }
    }

    stage('Build Docker image') {
      steps {
        dir('backend') {
          sh 'docker build -t $IMAGE_NAME .'
        }
      }
    }

    stage('Push Docker image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
          sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
          sh 'docker push $IMAGE_NAME'
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        script {
          sh '''
            echo "âœ… VÃ©rification du statut de Minikube"
            minikube status

            echo "ðŸš€ DÃ©ploiement de l'application sur Minikube"
            minikube kubectl -- apply -f k8s/backend-deployment.yaml
            minikube kubectl -- apply -f k8s/backend-service.yaml

            echo "âœ… DÃ©ploiement terminÃ©"
          '''
        }
      }
    }
  }
}
