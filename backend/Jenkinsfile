pipeline {
  agent any

  environment {
    IMAGE_NAME = 'charafedd20/backend-app:latest'
    DOCKER_CLI = '/usr/bin/docker'  // adapte si nécessaire
    KUBECONFIG_PATH = '/root/.kube/config'  // chemin kubeconfig dans le conteneur kubectl
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', credentialsId: 'github-creds', url: 'https://github.com/m-elhamlaoui/development-platform-jihane.git'
      }
    }

    stage('Build Backend') {
      steps {
        dir('backend') {
          sh './mvnw clean package -DskipTests'
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        dir('backend') {
          sh "${DOCKER_CLI} build -t ${IMAGE_NAME} ."
        }
      }
    }

    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          // Utiliser guillemets triples simples pour éviter l'interpolation Groovy et le warning
          sh '''
            echo "$DOCKER_PASS" | /usr/bin/docker login -u "$DOCKER_USER" --password-stdin
            /usr/bin/docker push ${IMAGE_NAME}
          '''
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        script {
          docker.image('lachlanevenson/k8s-kubectl:latest').inside('-v /var/jenkins_home/.kube:/root/.kube:ro') {
            dir('k8s') {
              sh """
                echo "=== Déploiement Kubernetes démarré ==="
                kubectl version --client --kubeconfig=${KUBECONFIG_PATH}
                head -20 ${KUBECONFIG_PATH}
                echo "Liste des fichiers dans k8s :"
                ls -l
                kubectl apply -f backend-deployment.yaml --kubeconfig=${KUBECONFIG_PATH}
                kubectl apply -f backend-service.yaml --kubeconfig=${KUBECONFIG_PATH}
                echo "=== Déploiement Kubernetes terminé ==="
              """
            }
          }
        }
      }
    }
  }
}
